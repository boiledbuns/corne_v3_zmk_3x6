/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        // Home row mods with balanced timing
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
            hold-trigger-on-release;
        };

        // Layer tap with longer hold time for comfort
        lt_spc: layer_tap_space {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_SPACE";
            bindings = <&mo>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        // Shift on hold, backspace on tap
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
        };

        // Comma/semicolon morph
        comma_semi: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMICOLON";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
        };

        // Dot/colon morph
        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COLON";
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
        };

        // Question mark / exclamation
        qexcl: question_exclamation {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTION_EXCLAMATION";
            bindings = <&kp QMARK>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            #binding-cells = <0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // Essential combos on home row and nearby keys
        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            layers = <0 1>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
            layers = <0 1>;
        };

        combo_caps {
            bindings = <&kp CAPS>;
            key-positions = <13 14 15 16>;
            layers = <0 1>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <21 22>;
            layers = <0 1>;
        };

        // Bracket pairs
        combo_lpar {
            bindings = <&kp LPAR>;
            key-positions = <2 14>;
            layers = <0 1>;
        };

        combo_rpar {
            bindings = <&kp RPAR>;
            key-positions = <9 21>;
            layers = <0 1>;
        };

        combo_lbkt {
            bindings = <&kp LBKT>;
            key-positions = <1 13>;
            layers = <0 1>;
        };

        combo_rbkt {
            bindings = <&kp RBKT>;
            key-positions = <10 22>;
            layers = <0 1>;
        };

        combo_lbrc {
            bindings = <&kp LBRC>;
            key-positions = <0 12>;
            layers = <0 1>;
        };

        combo_rbrc {
            bindings = <&kp RBRC>;
            key-positions = <11 23>;
            layers = <0 1>;
        };
    };

    macros {
        // Arrow function
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            label = "ARROW";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp EQUAL &kp GT &kp SPACE>;
        };

        // Fat arrow
        fat_arrow: fat_arrow {
            compatible = "zmk,behavior-macro";
            label = "FAT_ARROW";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp EQUAL &kp GT &kp GT &kp SPACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Layer 0: QWERTY
        default_layer {
            display-name = "QWERTY";
            bindings = <
            //┌────────┬────────┬────────┬────────┬────────┬────────┐   ┌────────┬────────┬────────┬────────┬────────┬────────┐
               &kp TAB   &kp Q    &kp W    &kp E    &kp R    &kp T        &kp Y    &kp U    &kp I    &kp O    &kp P    &bspc_del
            //├────────┼────────┼────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┼────────┼────────┤
               &kp ESC   &hml LGUI A &hml LALT S &hml LCTRL D &hml LSHFT F &kp G    &kp H    &hmr RSHFT J &hmr RCTRL K &hmr RALT L &hmr RGUI SEMI &kp SQT
            //├────────┼────────┼────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┼────────┼────────┤
               &kp LSHFT &kp Z    &kp X    &kp C    &kp V    &kp B        &kp N    &kp M    &comma_semi &dot_colon &qexcl   &kp RSHFT
            //╰────────┴────────┴────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┴────────┴────────╯
                                          &mo 3    &lt_spc 1 SPACE &kp TAB    &kp ENTER &lt_spc 2 BSPC &mo 3
            //                           ╰────────┴────────┴────────╯   ╰────────┴────────┴────────╯
            >;
        };

        // Layer 1: Numbers and Navigation
        numbers_layer {
            display-name = "NUM/NAV";
            bindings = <
            //┌────────┬────────┬────────┬────────┬────────┬────────┐   ┌────────┬────────┬────────┬────────┬────────┬────────┐
               &trans    &kp N1   &kp N2   &kp N3   &kp N4   &kp N5       &kp N6   &kp N7   &kp N8   &kp N9   &kp N0   &trans
            //├────────┼────────┼────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┼────────┼────────┤
               &trans    &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &kp F11     &kp LEFT &kp DOWN &kp UP   &kp RIGHT &kp HOME &kp PG_UP
            //├────────┼────────┼────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┼────────┼────────┤
               &trans    &kp F1   &kp F2   &kp F3   &kp F4   &kp F5       &kp F6   &kp F7   &kp F8   &kp F9   &kp END  &kp PG_DN
            //╰────────┴────────┴────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┴────────┴────────╯
                                          &trans   &trans   &trans       &kp ENTER &mo 4    &trans
            //                           ╰────────┴────────┴────────╯   ╰────────┴────────┴────────╯
            >;
        };

        // Layer 2: Symbols
        symbols_layer {
            display-name = "SYMBOLS";
            bindings = <
            //┌────────┬────────┬────────┬────────┬────────┬────────┐   ┌────────┬────────┬────────┬────────┬────────┬────────┐
               &trans    &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT    &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &trans
            //├────────┼────────┼────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┼────────┼────────┤
               &trans    &kp TILDE &kp GRAVE &kp MINUS &kp PLUS &kp EQUAL  &kp PIPE &kp UNDER &kp LBKT &kp RBKT &kp BSLH &kp DQT
            //├────────┼────────┼────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┼────────┼────────┤
               &trans    &arrow   &fat_arrow &kp LT  &kp GT   &kp FSLH     &kp QMARK &kp COLON &kp LBRC &kp RBRC &kp SEMI &trans
            //╰────────┴────────┴────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┴────────┴────────╯
                                          &trans   &mo 4    &trans       &trans   &trans   &trans
            //                           ╰────────┴────────┴────────╯   ╰────────┴────────┴────────╯
            >;
        };

        // Layer 3: Function Keys and Media
        function_layer {
            display-name = "FUNCTION";
            bindings = <
            //┌────────┬────────┬────────┬────────┬────────┬────────┐   ┌────────┬────────┬────────┬────────┬────────┬────────┐
               &trans    &kp F1   &kp F2   &kp F3   &kp F4   &kp F5       &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans
            //├────────┼────────┼────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┼────────┼────────┤
               &trans    &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &kp F11     &kp F12  &kp RSHFT &kp RCTRL &kp RALT &kp RGUI &trans
            //├────────┼────────┼────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┼────────┼────────┤
               &trans    &kp C_PREV &kp C_PLAY_PAUSE &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP  &kp C_MUTE &kp C_BRI_DN &kp C_BRI_UP &trans &trans &trans
            //╰────────┴────────┴────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┴────────┴────────╯
                                          &trans   &trans   &trans       &trans   &trans   &trans
            //                           ╰────────┴────────┴────────╯   ╰────────┴────────┴────────╯
            >;
        };

        // Layer 4: System and Bluetooth
        system_layer {
            display-name = "SYSTEM";
            bindings = <
            //┌────────┬────────┬────────┬────────┬────────┬────────┐   ┌────────┬────────┬────────┬────────┬────────┬────────┐
               &sys_reset &bootloader &none   &none    &none    &none       &none    &none    &none    &none    &bootloader &sys_reset
            //├────────┼────────┼────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┼────────┼────────┤
               &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &none &none &none &none &none &none
            //├────────┼────────┼────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┼────────┼────────┤
               &none     &none    &none    &none    &none    &none        &none    &none    &none    &none    &none    &none
            //╰────────┴────────┴────────┼────────┼────────┼────────┤   ├────────┼────────┼────────┼────────┴────────┴────────╯
                                          &trans   &trans   &trans       &trans   &trans   &trans
            //                           ╰────────┴────────┴────────╯   ╰────────┴────────┴────────╯
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};